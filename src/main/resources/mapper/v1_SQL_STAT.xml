<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.spring_jpa.data.GuriSQL_STAT">

    <!-- 양이 순위 통계 -->
    <select id="yangiRankList" resultType="map">
        WITH YES_STAT AS (SELECT AA.VILLAGE_ID
                               , AA.VILLAGE_NAME
                               , AA.KILL_YANG AS YES_KILL
                               , ROW_NUMBER()    OVER (ORDER BY AA.KILL_YANG DESC,cast(AA.VILLAGE_ID as signed) ASC) AS YES_RANK
                          FROM (SELECT A.VILLAGE_ID
                                     , A.VILLAGE_NAME
                                     , IFNULL(SUM(B.KILL_YANG), 0) KILL_YANG
                                FROM (SELECT * FROM kf99.TB_VILLAGE WHERE DEL_YN = 'N') A
                                         LEFT OUTER JOIN (SELECT *
                                                          FROM kf99.TT_YANG_WAR_INFO
                                                          WHERE STR_TO_DATE(STAT_HH_STND, '%Y%m%d%H%i%s') BETWEEN ADDDATE(CURDATE(), - WEEKDAY(CURDATE()) + 0) AND ADDDATE(CURDATE(), - WEEKDAY(CURDATE()) + 7)) B
                                                         ON A.VILLAGE_ID = B.VILLAGE_ID
                                WHERE 1 = 1
                                  AND A.VILLAGE_STAT_TYPE  <![CDATA[<>]]> 'VSCD3'
                                GROUP BY A.VILLAGE_ID) AA),
             BYES_STAT AS (SELECT AA.VILLAGE_ID
                                , AA.KILL_YANG AS BYES_KILL
                                , ROW_NUMBER()    OVER (ORDER BY AA.KILL_YANG DESC,cast(AA.VILLAGE_ID as signed) ASC) AS BYES_RANK
                           FROM (SELECT A.VILLAGE_ID
                                      , IFNULL(SUM(B.KILL_YANG), 0) KILL_YANG
                                 FROM (SELECT * FROM kf99.TB_VILLAGE WHERE DEL_YN = 'N') A
                                          LEFT OUTER JOIN (SELECT *
                                                           FROM kf99.TT_YANG_WAR_INFO
                                                           WHERE STR_TO_DATE(STAT_HH_STND, '%Y%m%d%H%i%s') BETWEEN ADDDATE(CURDATE(), - WEEKDAY(CURDATE()) - 7) AND ADDDATE(CURDATE(), - WEEKDAY(CURDATE()) + 6 - 7)) B
                                                          ON A.VILLAGE_ID = B.VILLAGE_ID
                                 WHERE 1 = 1
                                   AND A.VILLAGE_STAT_TYPE <![CDATA[<>]]> 'VSCD3'
                                 GROUP BY A.VILLAGE_ID) AA)
        SELECT AA.*
        FROM (SELECT A.VILLAGE_ID
                   , A.YES_KILL
                   , A.VILLAGE_NAME
                   , B.BYES_KILL
                   , A.YES_RANK
                   , B.BYES_RANK
                   , CASE
                         WHEN (cast(A.YES_RANK AS signed) - cast(B.BYES_RANK AS signed)) <![CDATA[<]]> 0 THEN 'UP'
                         WHEN (cast(A.YES_RANK AS signed) - cast(B.BYES_RANK AS signed)) <![CDATA[>]]> 0 THEN 'DOWN'
                         ELSE 'NORMAL'
                END                                                                               DIFF_TYPE
                   , ABS(cast(A.YES_RANK AS signed) - cast(B.BYES_RANK AS signed))                DIFF_NUM
                   , CONCAT(DATE_FORMAT(ADDDATE(CURDATE(), - WEEKDAY(CURDATE()) + 0), '%m%d'), ' ~ ',
                            DATE_FORMAT(ADDDATE(CURDATE(), - WEEKDAY(CURDATE()) + 6), '%m%d')) AS STAT_DAY
              FROM YES_STAT A
                       LEFT OUTER JOIN BYES_STAT B ON A.VILLAGE_ID = B.VILLAGE_ID
              WHERE 1 = 1
              ORDER BY A.YES_RANK) AA LIMIT 15
    </select>

    <!-- 마을 ID 조회 -->
    <select id="yangVillageList" resultType="integer" parameterType="string">
        SELECT VILLAGE_ID
        FROM kf99.TB_VILLAGE
        WHERE VILLAGE_NAME = #{name}
    </select>

    <!-- 양이 전공 마을 업로드 -->
    <insert id="insertYangKillsVillage" parameterType="map">
        INSERT INTO kf99.TT_YANG_WAR_INFO ( VILLAGE_ID
                                          , STAT_HH_STND
                                          , KILL_YANG
                                          , WAR_TIME_TYPE
                                          , REG_DT)
        VALUES ( #{villageId}
               , #{time}
               , #{killYang}
               , #{timeType}
               , NOW())
    </insert>

    <!-- 마을별 주민수 업로드 -->
    <insert id="insertVillageHumanUpload" parameterType="map">
        INSERT INTO kf99.TT_VILLAGE_COUNT_INFO ( VILLAGE_ID
                                               , STAT_DD_STND
                                               , HUMAN_CNT
                                               , REG_DT)
        VALUES ( #{villageId}
               , #{time}
               , #{humanCnt}
               , NOW())
    </insert>

    <!-- 마을별 주민수 리스트 -->
    <select id="selectVillageHumanCountList" resultType="map">
        WITH YES_STAT AS (SELECT AA.VILLAGE_ID
                               , AA.VILLAGE_NAME
                               , AA.HUMAN_CNT AS YES_HUMAN_CNT
                               , ROW_NUMBER()    OVER (ORDER BY AA.HUMAN_CNT DESC,cast(AA.VILLAGE_ID as signed) ASC) AS YES_RANK
                          FROM (SELECT A.VILLAGE_ID
                                     , A.VILLAGE_NAME
                                     , B.HUMAN_CNT
                                FROM (SELECT * FROM kf99.TB_VILLAGE WHERE DEL_YN = 'N') A
                                         LEFT OUTER JOIN (SELECT *
                                                          FROM kf99.TT_VILLAGE_COUNT_INFO
                                                          where STAT_DD_STND = date_format(SUBDATE(NOW(), 1), '%Y%m%d')) B
                                                         ON A.VILLAGE_ID = B.VILLAGE_ID
                                WHERE 1 = 1
                                  AND A.VILLAGE_STAT_TYPE <![CDATA[<>]]> 'VSCD3') AA),
             BYES_STAT AS (SELECT AA.VILLAGE_ID
                                , AA.VILLAGE_NAME
                                , AA.HUMAN_CNT AS BYES_HUMAN_CNT
                                , ROW_NUMBER()    OVER (ORDER BY AA.HUMAN_CNT DESC,cast(AA.VILLAGE_ID as signed) ASC) AS BYES_RANK
                           FROM (SELECT A.VILLAGE_ID
                                      , A.VILLAGE_NAME
                                      , B.HUMAN_CNT
                                 FROM (SELECT * FROM kf99.TB_VILLAGE WHERE DEL_YN = 'N') A
                                          LEFT OUTER JOIN (SELECT *
                                                           FROM kf99.TT_VILLAGE_COUNT_INFO
                                                           where STAT_DD_STND = date_format(SUBDATE(NOW(), 2), '%Y%m%d')) B
                                                          ON A.VILLAGE_ID = B.VILLAGE_ID
                                 WHERE 1 = 1
                                   AND A.VILLAGE_STAT_TYPE  <![CDATA[<>]]> 'VSCD3') AA)
        SELECT AA.*
        FROM (SELECT A.VILLAGE_ID
                   , IFNULL(A.YES_HUMAN_CNT, 0)  as                                          YES_HUMAN_CNT
                   , A.VILLAGE_NAME
                   , IFNULL(B.BYES_HUMAN_CNT, 0) as                                          BYES_HUMAN_CNT
                   , A.YES_RANK
                   , B.BYES_RANK
                   , CASE
                         WHEN (cast(A.YES_RANK AS signed) - cast(B.BYES_RANK AS signed)) <![CDATA[<]]> 0 THEN 'UP'
                         WHEN (cast(A.YES_RANK AS signed) - cast(B.BYES_RANK AS signed)) <![CDATA[>]]> 0 THEN 'DOWN'
                         ELSE 'NORMAL'
                END                                                                          DIFF_TYPE
                   , ABS(cast(A.YES_HUMAN_CNT AS signed) - cast(B.BYES_HUMAN_CNT AS signed)) DIFF_NUM
                   , concat(date_format(SUBDATE(NOW(), 1), '%Y'), '.', date_format(SUBDATE(NOW(), 1), '%m'), '.',
                            date_format(SUBDATE(NOW(), 1), '%d'))                            YES_DATE
              FROM YES_STAT A
                       LEFT OUTER JOIN BYES_STAT B ON A.VILLAGE_ID = B.VILLAGE_ID
              WHERE 1 = 1
              ORDER BY A.YES_RANK) AA LIMIT 35
    </select>

    <!-- 장인 업로드 -->
    <insert id="insertCraftsManList" parameterType="map">
        INSERT INTO kf99.TB_CRAFT_MAN_INFO(CRAFT_MAN_ID,
                                           CRAFT_MAN_NAME,
                                           CRAFT_TYPE,
                                           CRAFT_VILLAGE_ID,
                                           CRAFT_HAND_SKILL,
                                           CRAFT_LEVEL,
                                           UPD_DT)
        VALUES (#{craftsId},
                #{craftsManName},
                #{craftsType},
                #{villageId},
                #{handLevel},
                #{craftsLevel},
                now()) ON DUPLICATE KEY
        update
            CRAFT_VILLAGE_ID = #{villageId},
            CRAFT_HAND_SKILL = #{handLevel},
            CRAFT_LEVEL = #{craftsLevel},
            UPD_DT = now()
    </insert>

    <select id="staticsVillageHumanCnt" resultType="map" parameterType="map">
         WITH BASE AS (
                WITH RECURSIVE t AS (
                    SELECT  CONCAT( SUBSTRING(#{strt_dt},1,4) ,'-',SUBSTRING(#{strt_dt},5,6) , '-01') as dt
                    UNION ALL
                     SELECT DATE_ADD(t.dt, INTERVAL 1 DAY)
                       FROM t WHERE DATE_ADD(t.dt, INTERVAL 1 DAY) <![CDATA[<]]> date_format( LAST_DAY( CONCAT( SUBSTRING(#{strt_dt},1,4) , '-',SUBSTRING(#{strt_dt},5,6) , '-01') ) + INTERVAL 1 DAY, '%Y-%m-%d')
                )
                SELECT REPLACE(dt,'-','') AS DT
                  FROM t
        ),
        BASE2 AS (
	   	        WITH RECURSIVE t as (
	                SELECT  CONCAT(date_format(date_add(STR_TO_DATE(CONCAT(#{strt_dt},'01'),'%Y%m%d'), INTERVAL -1 MONTH), '%Y-%m'),'-01') as dt
	                UNION ALL
	                SELECT DATE_ADD(t.dt, INTERVAL 1 DAY) FROM t WHERE DATE_ADD(t.dt, INTERVAL 1 DAY) <![CDATA[<]]> date_format( LAST_DAY( concat(date_format(date_add(STR_TO_DATE(CONCAT(#{strt_dt},'01'),'%Y%m%d'), INTERVAL -1 MONTH), '%Y-%m'),'-01') ) + INTERVAL 1 DAY, '%Y-%m-%d')
	            )
	            SELECT REPLACE(dt,'-','') AS DT
	            FROM t
        ),
        BASE3 AS (
            WITH RECURSIVE cte AS (
                SELECT 1 AS n
                UNION ALL
                SELECT n + 1 FROM cte WHERE n <![CDATA[<]]> 31
            )
            SELECT CASE WHEN LENGTH(CAST(n AS CHAR(2))) = 1 THEN CONCAT('0',CAST(n AS CHAR(2)))
                    ELSE CAST(n AS CHAR(2))
                    END DATE
              FROM cte
         )
       SELECT AA.*
            , IFNULL(BB.HUMAN_CNT,0) AS CURRENT_CNT
            , IFNULL(CC.HUMAN_CNT,0) AS PRE_CNT
            , BB.DT AS DT_BB
            , CC.DT AS DT_CC
            , ( SELECT VILLAGE_NAME FROM TB_VILLAGE WHERE VILLAGE_ID = #{villageId} ) VILLAGE_NAME
       FROM BASE3 AA LEFT OUTER JOIN (
             SELECT A.DT
               , IFNULL(B.HUMAN_CNT, 0)  HUMAN_CNT
               , #{villageId} VILLAGE_ID
                 FROM BASE A LEFT OUTER JOIN ( SELECT  SUBSTRING(STAT_DD_STND,1,8) STAT_DD_STND, HUMAN_CNT,VILLAGE_ID  FROM kf99.TT_VILLAGE_COUNT_INFO b WHERE VILLAGE_ID = #{villageId}) B ON A.DT = B.STAT_DD_STND
         ) BB ON AA.DATE = SUBSTRING(BB.DT,7,8)
         LEFT OUTER JOIN
         (
          SELECT A.DT
               , IFNULL(B.HUMAN_CNT, 0)  HUMAN_CNT
               , #{villageId} VILLAGE_ID
           FROM BASE2 A LEFT OUTER JOIN ( SELECT  SUBSTRING(STAT_DD_STND,1,8) STAT_DD_STND, HUMAN_CNT,VILLAGE_ID  FROM kf99.TT_VILLAGE_COUNT_INFO b WHERE VILLAGE_ID = #{villageId}) B ON A.DT = B.STAT_DD_STND
        ) CC ON AA.DATE = SUBSTRING(CC.DT,7,8)
    </select>

    <select id="staticsCurrentHumanCnt" resultType="map" parameterType="map">
        WITH BASE AS (
             WITH RECURSIVE t AS (
                    SELECT  CONCAT( SUBSTRING(#{strt_dt},1,4) ,'-',SUBSTRING(#{strt_dt},5,6) , '-01') as dt
                    UNION ALL
                    SELECT DATE_ADD(t.dt, INTERVAL 1 DAY)
                       FROM t WHERE DATE_ADD(t.dt, INTERVAL 1 DAY) <![CDATA[<]]> date_format( LAST_DAY( CONCAT( SUBSTRING(#{strt_dt},1,4) , '-',SUBSTRING(#{strt_dt},5,6) , '-01') ) + INTERVAL 1 DAY, '%Y-%m-%d')
            )
            SELECT REPLACE(dt,'-','') AS DT
            FROM t
        ),
        BASE2 AS (
		   	WITH RECURSIVE t as (
		      SELECT  CONCAT(date_format(date_add(STR_TO_DATE(CONCAT(#{strt_dt},'01'),'%Y%m%d'), INTERVAL -1 MONTH), '%Y-%m'),'-01') as dt
		      UNION ALL
		       SELECT DATE_ADD(t.dt, INTERVAL 1 DAY) FROM t WHERE DATE_ADD(t.dt, INTERVAL 1 DAY) <![CDATA[<]]> date_format( LAST_DAY( concat(date_format(date_add(STR_TO_DATE(CONCAT(#{strt_dt},'01'),'%Y%m%d'), INTERVAL -1 MONTH), '%Y-%m'),'-01') ) + INTERVAL 1 DAY, '%Y-%m-%d')
		  )
		  select REPLACE(dt,'-','') AS DT
		   from t
  	     ),
         BASE3 AS (
			WITH RECURSIVE cte AS (
			    SELECT 1 AS n
			    UNION ALL
			    SELECT n + 1 FROM cte WHERE n <![CDATA[<]]>  31
			)
			SELECT CASE WHEN LENGTH(CAST(n AS CHAR(2))) = 1 THEN CONCAT('0',CAST(n AS CHAR(2)))
					ELSE CAST(n AS CHAR(2))
					END DATE
			  FROM cte
  		 )
  		 SELECT   ABCD.VILLAGE_NAME
  		 	    , ABCD.DT
  		 	    , IFNULL(ABC.HUMAN_CNT,0) HUMAN_CNT
  		 	    , (( IFNULL(ABC.HUMAN_CNT,0) - IFNULL(ABF.HUMAN_CNT, 0) ) / IFNULL(ABF.HUMAN_CNT, 1)) *  100 AS ASC_PER
  		 	    , CASE WHEN ((( IFNULL(ABC.HUMAN_CNT,0) - IFNULL(ABF.HUMAN_CNT, 0) ) / IFNULL(ABF.HUMAN_CNT, 1)) *  100) <![CDATA[>]]> 0 THEN 'UP'
  		 			   WHEN ((( IFNULL(ABC.HUMAN_CNT,0) - IFNULL(ABF.HUMAN_CNT, 0) ) / IFNULL(ABF.HUMAN_CNT, 1)) *  100) <![CDATA[<]]> 0 THEN 'DOWN'
  		 			   ELSE 'NORMAL'
  		                END ASC_ICON
  	       FROM	( SELECT
  		                VILLAGE_NAME
  		          	  , CONCAT (SUBSTRING(#{strt_dt},1,4) ,'-',SUBSTRING(#{strt_dt},5,6)) AS DT
  		              , #{villageId} VILLAGE_ID
  		            FROM TB_VILLAGE AC
  		            WHERE AC.VILLAGE_ID =#{villageId}) ABCD
       LEFT OUTER JOIN (
            SELECT  ROUND(AVG(BB.HUMAN_CNT),0) HUMAN_CNT
       			   , #{villageId} VILLAGE_ID
       FROM BASE3 AA
      LEFT OUTER JOIN
      (
                SELECT   A.DT
                       , IFNULL(B.HUMAN_CNT, 0)  HUMAN_CNT
                       ,#{villageId}  VILLAGE_ID
                  FROM BASE A LEFT OUTER JOIN ( SELECT  SUBSTRING( STAT_DD_STND,1,8) STAT_DD_STND, HUMAN_CNT,VILLAGE_ID  FROM TT_VILLAGE_COUNT_INFO b WHERE VILLAGE_ID =#{villageId}) B ON A.DT = B.STAT_DD_STND
            ) BB ON  AA.DATE = SUBSTRING(BB.DT, 7, 8)
            WHERE BB.HUMAN_CNT <![CDATA[<>]]> 0
         GROUP BY BB.VILLAGE_ID
      ) ABC ON ABCD.VILLAGE_ID = ABC.VILLAGE_ID
  	 LEFT OUTER JOIN
     (
          SELECT  ROUND(AVG(BB.HUMAN_CNT),0) HUMAN_CNT
                    ,#{villageId} VILLAGE_ID
           FROM BASE3 AA LEFT OUTER JOIN ( SELECT A.DT
                   , IFNULL(B.HUMAN_CNT, 0)  HUMAN_CNT
                   ,#{villageId}  VILLAGE_ID
                     FROM BASE2 A LEFT OUTER JOIN ( SELECT  SUBSTRING(STAT_DD_STND,1,8) STAT_DD_STND, HUMAN_CNT,VILLAGE_ID  FROM TT_VILLAGE_COUNT_INFO b WHERE VILLAGE_ID =#{villageId}) B ON A.DT = B.STAT_DD_STND
            ) BB ON   AA.DATE = SUBSTRING(BB.DT,7,8)
            WHERE BB.HUMAN_CNT <![CDATA[<>]]>0
            GROUP BY BB.VILLAGE_ID
     ) ABF ON ABCD.VILLAGE_ID = ABF.VILLAGE_ID
    </select>
</mapper>
